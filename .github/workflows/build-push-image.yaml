name: CI/CD Pipeline for Codexray

# -------------------------------------
# Triggers: Run on push to main branch
# -------------------------------------
on:
  push:
    branches:
      - main

# -------------------------------------
# Define Environment Variables
# -------------------------------------
env:
  GHCR_IMAGE: ghcr.io/codifinary/codexray-node-agent:latest
  VERSION: 3

permissions:
  packages: write    # Required for pushing Docker images to GHCR
  contents: write     # Required for accessing repository contents

# -------------------------------------
# Job 1: CI - Build, Test, Lint
# -------------------------------------
jobs:

# -------------------------------------
# Job 2: Build and Push Docker Image to GHCR
# -------------------------------------
  build-and-push:
    name: Build and Push Docker Image to GHCR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Log in to GHCR
      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Build Docker Image
      # - name: Build Docker Image
      #   run: |
      #     docker build -t $GHCR_IMAGE -f Dockerfile .

      # # Push Docker Image to GHCR
      # - name: Push Docker Image to GHCR
      #   run: |
      #     docker push $GHCR_IMAGE

   # Install systemd development headers
      - name: Install systemd development headers
        run: |
          sudo apt-get update
          sudo apt-get install -y libsystemd-dev

      #Build the codexray-node-agent Binary
      - name: Build codexray-node-agent Binary
        run: |
          # Build the binary using the provided command.
          # The VERSION environment variable is set above.
          GOARCH=amd64 GOOS=linux CGO_ENABLED=1 go build -mod=readonly -ldflags "-X main.version=$VERSION" -o codexray-node-agent .
          # List the output to verify the binary is created.
          ls -la codexray-node-agent

      # Create a GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.VERSION }}"           # Using the version from the env variable.
          release_name: "Release v${{ env.VERSION }}"  # Using the version from the env variable.
          draft: false
          prerelease: false

      # Upload Binary as a Release Asset
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./codexray-node-agent      # Path to your binary
          asset_name: codexray-node-agent          # Name for the asset in the release
          asset_content_type: application/octet-stream
